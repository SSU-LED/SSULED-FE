name: Deploy Frontend to EC2
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: |
          # 환경 변수 설정
          echo "${{ secrets.FRONTEND_ENV }}" > .env.production
          # Vite 빌드
          npm run build
      - name: Prepare deployment files
        run: |
          mkdir -p deploy
          cp -r dist deploy/
          tar -czf deploy.tar.gz deploy
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "Host *
            ServerAliveInterval 60
            ServerAliveCountMax 30" > ~/.ssh/config
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - name: Transfer files to EC2
        run: scp deploy.tar.gz ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/
      - name: Upload files to EC2
        run: |
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOL'
            set -e
            
            echo 'Uploading frontend files...'
            
            # Create deployment directory
            mkdir -p /home/${{ secrets.EC2_USERNAME }}/apps/frontend
            
            # Extract files
            tar -xzf deploy.tar.gz
            
            # Remove existing dist directory
            if [ -d '/home/${{ secrets.EC2_USERNAME }}/apps/frontend/dist' ]; then
              rm -rf /home/${{ secrets.EC2_USERNAME }}/apps/frontend/dist
            fi
            
            # Copy dist files
            cp -r deploy/dist /home/${{ secrets.EC2_USERNAME }}/apps/frontend/
            
            # Cleanup temporary files
            rm -rf /home/${{ secrets.EC2_USERNAME }}/deploy
            rm /home/${{ secrets.EC2_USERNAME }}/deploy.tar.gz
            
            echo 'Frontend files uploaded successfully!'
            echo 'To start the application, SSH into the server and run:'
            echo 'cd /home/${{ secrets.EC2_USERNAME }}/apps/frontend'
            echo 'pm2 delete ssuled-client || true'
            echo 'pm2 start serve --name ssuled-client -- -s dist -l 3000'
          EOL
